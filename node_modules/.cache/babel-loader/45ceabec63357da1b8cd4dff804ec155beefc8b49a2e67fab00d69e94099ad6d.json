{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-189e9673\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"task-list\"\n};\nconst _hoisted_2 = {\n  class: \"task-list-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"empty-list\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_task_item = _resolveComponent(\"task-item\");\n  const _component_task_form = _resolveComponent(\"task-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_TransitionGroup, {\n    name: \"task-list\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tasks, task => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [task && !task.isEditing ? (_openBlock(), _createBlock(_component_task_item, {\n        task: task,\n        key: task.task_id,\n        onDelete: $event => _ctx.$emit('delete', task),\n        onEdit: $event => _ctx.$emit('edit', task),\n        onIsCompleted: $event => _ctx.$emit('is-completed', task)\n      }, null, 8 /* PROPS */, [\"task\", \"onDelete\", \"onEdit\", \"onIsCompleted\"])) : task ? (_openBlock(), _createBlock(_component_task_form, {\n        task: task,\n        key: task.task_id,\n        onCompleteEdit: $event => _ctx.$emit('completeEdit', task)\n      }, null, 8 /* PROPS */, [\"task\", \"onCompleteEdit\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n    }), 256 /* UNKEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]), $props.tasks.length === 0 ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, [_createTextVNode(\"Список задач пуст\"), _hoisted_4, _createTextVNode(\"Добавьте новую!\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_TransitionGroup","name","default","_withCtx","_Fragment","_renderList","$props","tasks","task","isEditing","_createBlock","_component_task_item","task_id","onDelete","$event","_ctx","$emit","onEdit","onIsCompleted","_component_task_form","onCompleteEdit","_createCommentVNode","_","length","_hoisted_3","_createTextVNode","_hoisted_4"],"sources":["/Users/evgenijantonyuk/Desktop/Urban/vue/TaskList-master/src/components/TaskList.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-list\">\r\n    <div class=\"task-list-container\">\r\n      <transition-group name=\"task-list\">\r\n        <template v-for=\"task in tasks\">\r\n          <task-item\r\n              v-if=\"task && !task.isEditing\"\r\n              :task=\"task\"\r\n              :key=\"task.task_id\"\r\n              @delete=\"$emit('delete', task)\"\r\n              @edit=\"$emit('edit', task)\"\r\n              @is-completed=\"$emit('is-completed', task)\"\r\n          />\r\n          <task-form\r\n              v-else-if=\"task\"\r\n              :task=\"task\"\r\n              :key=\"task.task_id\"\r\n              @completeEdit=\"$emit('completeEdit', task)\"\r\n          />\r\n        </template>\r\n      </transition-group>\r\n    </div>\r\n    <h2 class=\"empty-list\" v-if=\"tasks.length===0\">Список задач пуст<br/>Добавьте новую!</h2>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport TaskItem from \"@/components/TaskItem\";\r\nimport TaskForm from \"@/components/TaskForm\";\r\n\r\nexport default {\r\n  name: \"TaskList\",\r\n  components: {TaskForm, TaskItem},\r\n  props: {\r\n    tasks: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  watch() {\r\n    console.log(this.tasks)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.task-list {\r\n  width: 100%;\r\n}\r\n\r\n.task-list-container {\r\n  display: flex;\r\n  /*justify-content: center;*/\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\nh2 {\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.tasks-list-item {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n\r\n.tasks-list-enter-active,\r\n.tasks-list-leave-active {\r\n  transition: all 1s ease;\r\n}\r\n\r\n.tasks-list-enter-from,\r\n.tasks-list-leave-to {\r\n  opacity: 0;\r\n  transform: translateY(30px);\r\n}\r\n\r\n.tasks-list-move {\r\n  transition: transform 0.5s ease;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAqB;;EAFpCC,GAAA;EAsBQD,KAAK,EAAC;;gEAAsDE,mBAAA,CAAK;;;;uBArBvEC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJF,mBAAA,CAmBM,OAnBNG,UAmBM,GAlBJC,YAAA,CAiBmBC,gBAAA;IAjBDC,IAAI,EAAC;EAAW;IAHxCC,OAAA,EAAAC,QAAA,CAIkB,MAAqB,E,kBAA/BP,mBAAA,CAeWQ,SAAA,QAnBnBC,WAAA,CAIiCC,MAAA,CAAAC,KAAK,EAAbC,IAAI;2BAJ7BZ,mBAAA,CAAAQ,SAAA,SAMoBI,IAAI,KAAKA,IAAI,CAACC,SAAS,I,cADjCC,YAAA,CAOEC,oBAAA;QALGH,IAAI,EAAEA,IAAI;QACVd,GAAG,EAAEc,IAAI,CAACI,OAAO;QACjBC,QAAM,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWR,IAAI;QAC5BS,MAAI,EAAAH,MAAA,IAAEC,IAAA,CAAAC,KAAK,SAASR,IAAI;QACxBU,aAAY,EAAAJ,MAAA,IAAEC,IAAA,CAAAC,KAAK,iBAAiBR,IAAI;kFAG9BA,IAAI,I,cADnBE,YAAA,CAKES,oBAAA;QAHGX,IAAI,EAAEA,IAAI;QACVd,GAAG,EAAEc,IAAI,CAACI,OAAO;QACjBQ,cAAY,EAAAN,MAAA,IAAEC,IAAA,CAAAC,KAAK,iBAAiBR,IAAI;6DAjBvDa,mBAAA,e;;IAAAC,CAAA;QAsBiChB,MAAA,CAAAC,KAAK,CAACgB,MAAM,U,cAAzC3B,mBAAA,CAAyF,MAAzF4B,UAAyF,GAtB7FC,gBAAA,CAsBmD,mBAAiB,GAAAC,UAAK,EAtBzED,gBAAA,CAsByE,iBAAe,E,KAtBxFJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}